@page "/rooms"
@inject NavigationManager _navigationManager
@inject IRoomService _roomService
@inject IToastService _toastService
@attribute [Authorize]

<h3>Create Room</h3>

<EditForm Model="_roomCreate" OnValidSubmit="CreateRoom">
    <DataAnnotationsValidator/>
    <div class="form-group">
        <label for="name" class="required">Name</label>
        <InputText id="name" @bind-Value="_roomCreate.Name" class="form-control"></InputText>
        <ValidationMessage For="@(() => _roomCreate.Name)"/>
    </div>
    <br/>
    <button type="submit" class="btn btn-primary">Create</button>
</EditForm>

@code {
    RoomCreate _roomCreate = new();

    protected override async Task OnInitializedAsync()
    {
        await _roomService.UpdateRooms();
    }

    async void CreateRoom()
    {
        var result = await _roomService.Create(_roomCreate);
        if (!result.Succeeded)
        {
            foreach (var notification in result.Notifications)
                _toastService.ShowError(notification);
        }
        else
        {
            _toastService.ShowSuccess($"Room \"{_roomCreate.Name}\" created successfully");
            _navigationManager.NavigateTo($"/room/{result.RoomId}");
        }
    }

}