@page "/register"
@inject NavigationManager _navigationManager
@inject IAuthService _authService
@inject IToastService _toastService

<h3>Register User</h3>

<EditForm Model="_userRegister" OnValidSubmit="SendRegistration">
    <DataAnnotationsValidator/>
    <div class="form-group">
        <label for="name" class="required">Name</label>
        <InputText id="name" @bind-Value="_userRegister.Name" class="form-control"></InputText>
        <ValidationMessage For="@(() => _userRegister.Name)"/>
    </div>
    <div class="form-group">
        <label for="email" class="required">Email</label>
        <InputText id="email" @bind-Value="_userRegister.Email" class="form-control"></InputText>
        <ValidationMessage For="@(() => _userRegister.Email)"/>
    </div>
    <div class="form-group">
        <label for="password" class="required">Password</label>
        <InputText id="password" @bind-Value="_userRegister.Password" class="form-control" type="password"></InputText>
        <ValidationMessage For="@(() => _userRegister.Password)"/>
    </div>
    <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="_userRegister.ConfirmPassword" class="form-control" type="password"></InputText>
        <ValidationMessage For="() => _userRegister.ConfirmPassword"/>
    </div>
    <br/>
    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    UserRegister _userRegister = new();

    async void SendRegistration()
    {
        var result = await _authService.Register(_userRegister);
        if (result.Any())
        {
            foreach (var notification in result)
                _toastService.ShowError(notification);
        }
        else
        {
            _toastService.ShowSuccess("Logged in!");
            _navigationManager.NavigateTo("/");
        }
    }

}